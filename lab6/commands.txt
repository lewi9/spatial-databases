-- cmd
pg_restore -U postgres --create --dbname=postgres <path_to_backup>

-- SQL
CREATE EXTENSION postgis_raster;

-- cmd
psql -U postgres -c "ALTER DATABASE postgis_raster_ut SET SEARCH_PATH TO 'rasters', public"

raster2pgsql.exe -s 3763 -N -32767 -t 100x100 -I -C -M -d <path_to_raster> rasters.dem | psql -d postgis_raster_ut -U postgres
raster2pgsql.exe -s 3763 -N -32767 -t 128x128 -I -C -M -d <path_to_raster> rasters.landsat8 | psql -d postgis_raster_ut -U postgres

-- SQL
SELECT * FROM raster_columns;

CREATE SCHEMA lab6;

-- Raster + Vector
-- Zad 1
DROP table IF EXISTS lab6.intersects;

CREATE TABLE lab6.intersects AS
SELECT a.rast, b.municipality
FROM rasters.dem AS a, vectors.porto_parishes AS b
WHERE ST_Intersects(a.rast, b.geom) AND b.municipality ilike 'porto';

alter table lab6.intersects
add column rid SERIAL PRIMARY KEY;

CREATE INDEX idx_intersects_rast_gist ON lab6.intersects
USING gist (ST_ConvexHull(rast));

SELECT AddRasterConstraints('lab6'::name,
'intersects'::name,'rast'::name);

SELECT * FROM lab6.intersects;

-- Zad 2

DROP table IF EXISTS lab6.clip;

CREATE TABLE lab6.clip AS
SELECT ST_Clip(a.rast, b.geom, true) AS rast, b.municipality
FROM rasters.dem AS a, vectors.porto_parishes AS b
WHERE ST_Intersects(a.rast, b.geom) AND b.municipality like 'PORTO';

alter table lab6.clip
add column rid SERIAL PRIMARY KEY;

CREATE INDEX idx_clip_rast_gist ON lab6.clip
USING gist (ST_ConvexHull(rast));

SELECT AddRasterConstraints('lab6'::name,
'clip'::name,'rast'::name);

SELECT * FROM lab6.clip;

-- Zad 3

DROP table IF EXISTS lab6.union;

CREATE TABLE lab6.union AS
SELECT ST_Union(rast) AS rast
FROM lab6.clip;

alter table lab6.union
add column rid SERIAL PRIMARY KEY;

CREATE INDEX idx_union_rast_gist ON lab6.union
USING gist (ST_ConvexHull(rast));

SELECT AddRasterConstraints('lab6'::name,
'union'::name,'rast'::name);

SELECT * FROM lab6.union;

-- Vector to Raster
-- Zad 1

DROP table IF EXISTS lab6.porto_parishes;

CREATE TABLE lab6.porto_parishes AS
WITH r AS (
	SELECT rast FROM rasters.dem
	LIMIT 1
)
SELECT ST_AsRaster(a.geom,r.rast,'8BUI',a.id,-32767) AS rast
FROM vectors.porto_parishes AS a, r
WHERE a.municipality ilike 'porto';

alter table lab6.porto_parishes
add column rid SERIAL PRIMARY KEY;

CREATE INDEX idx_porto_parishes_rast_gist ON lab6.porto_parishes
USING gist (ST_ConvexHull(rast));

SELECT AddRasterConstraints('lab6'::name,
'porto_parishes'::name,'rast'::name);

SELECT * FROM lab6.porto_parishes;

-- Zad 2
DROP TABLE lab6.porto_parishes; --> drop table porto_parishes first

CREATE TABLE lab6.porto_parishes AS
WITH r AS (
	SELECT rast FROM rasters.dem
	LIMIT 1
)

SELECT st_union(ST_AsRaster(a.geom,r.rast,'8BUI',a.id,-32767)) AS rast
FROM vectors.porto_parishes AS a, r
WHERE a.municipality ilike 'porto';

alter table lab6.porto_parishes
add column rid SERIAL PRIMARY KEY;

CREATE INDEX idx_porto_parishes_rast_gist ON lab6.porto_parishes
USING gist (ST_ConvexHull(rast));

SELECT AddRasterConstraints('lab6'::name,
'porto_parishes'::name,'rast'::name);

SELECT * FROM lab6.porto_parishes;

-- Zad 3
DROP TABLE lab6.porto_parishes; --> drop table porto_parishes first
CREATE TABLE lab6.porto_parishes AS
WITH r AS (
	SELECT rast FROM rasters.dem
	LIMIT 1 
)
SELECT st_tile(st_union(ST_AsRaster(a.geom,r.rast,'8BUI',a.id,-
32767)),128,128,true,-32767) AS rast
FROM vectors.porto_parishes AS a, r
WHERE a.municipality ilike 'porto';

alter table lab6.porto_parishes
add column rid SERIAL PRIMARY KEY;

CREATE INDEX idx_porto_parishes_rast_gist ON lab6.porto_parishes
USING gist (ST_ConvexHull(rast));

SELECT AddRasterConstraints('lab6'::name,
'porto_parishes'::name,'rast'::name);

SELECT * FROM lab6.porto_parishes;

-- Raster To Vector
-- Zad 1

DROP TABLE IF EXISTS lab6.intersection;
create table lab6.intersection as
SELECT
a.rid,(ST_Intersection(b.geom,a.rast)).geom,(ST_Intersection(b.geom,a.rast)).val
FROM rasters.landsat8 AS a, vectors.porto_parishes AS b
WHERE b.parish ilike 'paranhos' and ST_Intersects(b.geom,a.rast);

SELECT * FROM lab6.intersection;

-- Zad 2
CREATE TABLE lab6.dumppolygons AS
SELECT
a.rid,(ST_DumpAsPolygons(ST_Clip(a.rast,b.geom))).geom,(ST_DumpAsPolygons(ST_Clip(a.rast,b.geom))).val
FROM rasters.landsat8 AS a, vectors.porto_parishes AS b
WHERE b.parish ilike 'paranhos' and ST_Intersects(b.geom,a.rast);

SELECT * FROM lab6.dumppolygons

-- Raster Analysis
-- Zad 1
CREATE TABLE lab6.landsat_nir AS
SELECT rid, ST_Band(rast,4) AS rast
FROM rasters.landsat8;

CREATE INDEX idx_landsat_nir_rast_gist ON lab6.landsat_nir
USING gist (ST_ConvexHull(rast));

SELECT AddRasterConstraints('lab6'::name,
'landsat_nir'::name,'rast'::name);

SELECT * FROM lab6.landsat_nir;

-- Zad 2
CREATE TABLE lab6.paranhos_dem AS
SELECT a.rid,ST_Clip(a.rast, b.geom,true) as rast
FROM rasters.dem AS a, vectors.porto_parishes AS b
WHERE b.parish ilike 'paranhos' and ST_Intersects(b.geom,a.rast);

CREATE INDEX idx_paranhos_dem_rast_gist ON lab6.paranhos_dem
USING gist (ST_ConvexHull(rast));

SELECT AddRasterConstraints('lab6'::name,
'paranhos_dem'::name,'rast'::name);

SELECT * FROM lab6.paranhos_dem;

-- Zad 3
CREATE TABLE lab6.paranhos_slope AS
SELECT a.rid,ST_Slope(a.rast,1,'32BF','PERCENTAGE') as rast
FROM lab6.paranhos_dem AS a;

CREATE INDEX idx_paranhos_slope_rast_gist ON lab6.paranhos_slope
USING gist (ST_ConvexHull(rast));

SELECT AddRasterConstraints('lab6'::name,
'paranhos_slope'::name,'rast'::name);

SELECT * FROM lab6.paranhos_slope;

-- Zad 4
CREATE TABLE lab6.paranhos_slope_reclass AS
SELECT a.rid,ST_Reclass(a.rast,1,']0-15]:1, (15-30]:2, (30-9999:3','32BF',0) AS rast
FROM lab6.paranhos_slope AS a;

CREATE INDEX idx_paranhos_slope_reclass_rast_gist ON lab6.paranhos_slope_reclass
USING gist (ST_ConvexHull(rast));

SELECT AddRasterConstraints('lab6'::name,
'paranhos_slope_reclass'::name,'rast'::name);

SELECT * FROM lab6.paranhos_slope_reclass;

-- Zad 5
SELECT st_summarystats(a.rast) AS stats
FROM lab6.paranhos_dem AS a;

-- Zad 6
SELECT st_summarystats(ST_Union(a.rast))
FROM lab6.paranhos_dem AS a;

-- Zad 7 
WITH t AS (
	SELECT st_summarystats(ST_Union(a.rast)) AS stats
	FROM lab6.paranhos_dem AS a
)
SELECT (stats).min,(stats).max,(stats).mean FROM t;

-- Zad 8
WITH t AS (
	SELECT b.parish AS parish, st_summarystats(ST_Union(ST_Clip(a.rast, b.geom,true))) AS stats
	FROM rasters.dem AS a, vectors.porto_parishes AS b
	WHERE b.municipality ilike 'porto' and ST_Intersects(b.geom,a.rast)
	group by b.parish
)
SELECT parish,(stats).min,(stats).max,(stats).mean FROM t;

-- Zad 9
SELECT b.name,st_value(a.rast,(ST_Dump(b.geom)).geom)
FROM rasters.dem a, vectors.places AS b
WHERE ST_Intersects(a.rast,b.geom)
ORDER BY b.name;

-- Zad 10
create table lab6.tpi30 as
select ST_TPI(a.rast,1) as rast
from rasters.dem a;

CREATE INDEX idx_tpi30_rast_gist ON lab6.tpi30
USING gist (ST_ConvexHull(rast));

SELECT AddRasterConstraints('lab6'::name,
'tpi30'::name,'rast'::name);;

-- Samodzielne rozwiÄ…zanie
-- Yeah, it it faster, but we don't obtain full result, only for Porto :(

DROP TABLE IF EXISTS lab6.tpi30_porto;

create table lab6.tpi30_porto as
select ST_TPI(a.rast,1) as rast
from lab6.intersects a;

CREATE INDEX idx_tpi30_potyo_rast_gist ON lab6.tpi30_porto
USING gist (ST_ConvexHull(rast));

SELECT AddRasterConstraints('lab6'::name,
'tpi30_porto'::name,'rast'::name);

SELECT * FROM lab6.tpi30_porto;