-- "wyremontowane" or new buildings - change in geometry or height
-- Anti Join

WITH buildings AS (
	SELECT left_table.*
	FROM T2019_KAR_BUILDINGS AS left_table
	LEFT JOIN T2018_KAR_BUILDINGS AS right_table 
	ON left_table.wkb_geometry = right_table.wkb_geometry AND left_table.height = right_table.height
	WHERE right_table.wkb_geometry IS NULL
), buffer AS (
	SELECT ST_Buffer(ST_Union(wkb_geometry), 0.005) AS wkb_geometry FROM buildings
), new_poi AS (
	-- Assumption: New poi doesn't need to have new poi_id, it's enough if poi existed but changed place.
	SELECT left_table.*
	FROM T2019_KAR_POI_TABLE AS left_table
	LEFT JOIN T2018_KAR_POI_TABLE AS right_table
	ON left_table.wkb_geometry = right_table.wkb_geometry
	WHERE right_table.wkb_geometry IS NULL
), count_poi AS (
	SELECT COUNT(CASE WHEN ST_Contains(left_table.wkb_geometry, right_table.wkb_geometry) THEN 1 END) AS count, type
	FROM new_poi AS right_table
	CROSS JOIN buffer AS left_table
	GROUP BY type
)

SELECT * 
FROM count_poi
WHERE count != 0
ORDER BY count DESC;